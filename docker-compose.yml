version: '3.8'

services:
  video_screen:
    build:
      context: .
    container_name: video_screen
    volumes:
      - .:/app
    command: sh /app/init_video_screen.sh
    healthcheck:
      test: ["CMD", "test", "-f", "/app/video_screen/ready.txt"]
      interval: 1m30s
      timeout: 20s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"  # Tăng giới hạn log lên 10MB
        max-file: "3"    # Lưu trữ tối đa 3 file log
  # Dịch vụ Celery
  celery:
    container_name: celery  # Đặt tên container là 'celery'
    restart: always  # Tự động khởi động lại khi có lỗi
    build:
      context: .  # Xây dựng image từ thư mục hiện tại
    command: celery -A celeryworker worker -l INFO --hostname=render6@%h --concurrency=3 -Q render_content
    volumes:
      - .:/app  # Mount thư mục hiện tại của host vào /app trong container
    depends_on:
      video_screen:
        condition: service_healthy  # Đảm bảo dịch vụ video_screen đã khỏe mạnh trước khi celery chạy

  # Dịch vụ Voicevox
  voicevox:
    container_name: voicevox  # Đặt tên container là 'voicevox'
    image: voicevox/voicevox_engine:cpu-ubuntu20.04-latest  # Sử dụng image có sẵn của Voicevox
    ports:
      - "127.0.0.1:50021:50021"  # Liên kết cổng 50021 của host với cổng 50021 của container
    restart: always  # Tự động khởi động lại khi có lỗi
    volumes:
      - .:/app  # Mount thư mục hiện tại của host vào /app trong container
    depends_on:
      video_screen:
        condition: service_healthy  # Đảm bảo dịch vụ video_screen đã khỏe mạnh trước khi voicevox chạy
